# Compiler
CC := gcc

# Source files
SRC := main.c school.c

# Object files (generated from source files)
OBJ := $(SRC:.c=.o)

# Executable name
NAME := school

# Flags
CFLAGS := -Wall -Werror -Wextra -pedantic

# Rule: all
# The all rule builds the executable 'school'
all: $(NAME)

# Target: $(NAME) (executable)
# Dependencies: $(OBJ)
# Recipe: Compile $(OBJ) into the 'school' executable
$(NAME): $(OBJ)
	$(CC) -o $@ $(OBJ)

# Rule: clean
# Deletes all Emacs and Vim temporary files along with the executable
clean:
	$(RM) *~ $(NAME)

# Rule: oclean
# Deletes the object files
oclean:
	$(RM) $(OBJ)

# Rule: fclean
# Deletes all Emacs and Vim temporary files, the executable, and the object files
fclean: clean oclean
	$(RM) $(NAME)
# Rule: re
# Forces recompilation of all source files
re: fclean all

# Ensure that clean, oclean, fclean, and re rules never fail
.PHONY: clean oclean fclean re

# Dependency check for header file m.h
$(OBJ): m.h

# Use RM twice as per requirement
RM = rm -f
